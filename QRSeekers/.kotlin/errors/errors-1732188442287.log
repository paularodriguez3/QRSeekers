kotlin version: 2.0.0
error message: org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException: Protocol message contained an invalid tag (zero).
	at org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException.invalidTag(InvalidProtocolBufferException.java:89)
	at org.jetbrains.kotlin.protobuf.CodedInputStream.readTag(CodedInputStream.java:158)
	at org.jetbrains.kotlin.metadata.jvm.JvmModuleProtoBuf$Module.<init>(JvmModuleProtoBuf.java:223)
	at org.jetbrains.kotlin.metadata.jvm.JvmModuleProtoBuf$Module.<init>(JvmModuleProtoBuf.java:188)
	at org.jetbrains.kotlin.metadata.jvm.JvmModuleProtoBuf$Module$1.parsePartialFrom(JvmModuleProtoBuf.java:341)
	at org.jetbrains.kotlin.metadata.jvm.JvmModuleProtoBuf$Module$1.parsePartialFrom(JvmModuleProtoBuf.java:336)
	at org.jetbrains.kotlin.protobuf.AbstractParser.parsePartialFrom(AbstractParser.java:192)
	at org.jetbrains.kotlin.protobuf.AbstractParser.parseFrom(AbstractParser.java:209)
	at org.jetbrains.kotlin.protobuf.AbstractParser.parseFrom(AbstractParser.java:49)
	at org.jetbrains.kotlin.metadata.jvm.JvmModuleProtoBuf$Module.parseFrom(JvmModuleProtoBuf.java:821)
	at org.jetbrains.kotlin.metadata.jvm.deserialization.ModuleMapping$Companion.loadModuleMapping(ModuleMapping.kt:83)
	at org.jetbrains.kotlin.load.kotlin.ModuleMappingUtilKt.loadModuleMapping(ModuleMappingUtil.kt:19)
	at org.jetbrains.kotlin.cli.jvm.compiler.JvmPackagePartProviderKt.tryLoadModuleMapping(JvmPackagePartProvider.kt:73)
	at org.jetbrains.kotlin.cli.jvm.compiler.JvmPackagePartProvider.addRoots(JvmPackagePartProvider.kt:55)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.ProjectEnvironmentWithCoreEnvironmentEmulation.getPackagePartProvider(jvmCompilerPipeline.kt:375)
	at org.jetbrains.kotlin.cli.common.FirSessionConstructionUtilsKt.prepareJvmSessions(FirSessionConstructionUtils.kt:80)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModuleToAnalyzedFir(jvmCompilerPipeline.kt:293)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:116)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)


